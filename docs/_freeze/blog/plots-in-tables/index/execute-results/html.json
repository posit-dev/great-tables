{
  "hash": "d32d335d45f053b2d39f64999dcc2de6",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Adding Plots to Great Tables\"\nhtml-table-processing: none\nauthor: Jules Walzer-Goldfeld and Michael Chow\ndate: 2025-07-03\njupyter: python3\nfreeze: true\n---\n\nWhile working on [**gt-extras**](https://posit-dev.github.io/gt-extras/articles/intro.html), I've been exploring how to add small plots to Great Tables. These can go by many names, like spark lines, nanoplots, and so on. In this post, I'll look at three approaches I tried: adding plots with [`plotnine`](https://plotnine.org/), [`svg.py`](https://github.com/orsinium-labs/svg.py), or adding HTML directly. In the first two cases, the plots are SVGs, while the latter entails a collection of composed HTML div elements.\n\nHere are the pieces I'll cover:\n\n* **svg.py**: creating your own tiny chart directly for a row.\n* **direct HTML**: adding HTML divs directly.\n* **plotnine**: adding a full, stripped-down chart to a row.\n\nIn the end, it's often simplest to use `svg.py`, since you can create basic charts with minimal overhead. Building elements with HTML has even _less_ overhead, but it is also slightly less user-friendly. At the other end of the spectrum, as your charts become more complex, using existing packages like the more exhaustive `plotnine` is a good alternative.\n\n::: {#2a647ddd .cell execution_count=1}\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div id=\"kfhjuqdzhe\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>\n#kfhjuqdzhe table {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n        }\n\n#kfhjuqdzhe thead, tbody, tfoot, tr, td, th { border-style: none; }\n tr { background-color: transparent; }\n#kfhjuqdzhe p { margin: 0; padding: 0; }\n #kfhjuqdzhe .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }\n #kfhjuqdzhe .gt_caption { padding-top: 4px; padding-bottom: 4px; }\n #kfhjuqdzhe .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }\n #kfhjuqdzhe .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }\n #kfhjuqdzhe .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #kfhjuqdzhe .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #kfhjuqdzhe .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #kfhjuqdzhe .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }\n #kfhjuqdzhe .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }\n #kfhjuqdzhe .gt_column_spanner_outer:first-child { padding-left: 0; }\n #kfhjuqdzhe .gt_column_spanner_outer:last-child { padding-right: 0; }\n #kfhjuqdzhe .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; }\n #kfhjuqdzhe .gt_spanner_row { border-bottom-style: hidden; }\n #kfhjuqdzhe .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; }\n #kfhjuqdzhe .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; }\n #kfhjuqdzhe .gt_from_md> :first-child { margin-top: 0; }\n #kfhjuqdzhe .gt_from_md> :last-child { margin-bottom: 0; }\n #kfhjuqdzhe .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; }\n #kfhjuqdzhe .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; }\n #kfhjuqdzhe .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }\n #kfhjuqdzhe .gt_row_group_first td { border-top-width: 2px; }\n #kfhjuqdzhe .gt_row_group_first th { border-top-width: 2px; }\n #kfhjuqdzhe .gt_striped { background-color: rgba(128,128,128,0.05); }\n #kfhjuqdzhe .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #kfhjuqdzhe .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }\n #kfhjuqdzhe .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }\n #kfhjuqdzhe .gt_left { text-align: left; }\n #kfhjuqdzhe .gt_center { text-align: center; }\n #kfhjuqdzhe .gt_right { text-align: right; font-variant-numeric: tabular-nums; }\n #kfhjuqdzhe .gt_font_normal { font-weight: normal; }\n #kfhjuqdzhe .gt_font_bold { font-weight: bold; }\n #kfhjuqdzhe .gt_font_italic { font-style: italic; }\n #kfhjuqdzhe .gt_super { font-size: 65%; }\n #kfhjuqdzhe .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }\n #kfhjuqdzhe .gt_asterisk { font-size: 100%; vertical-align: 0; }\n \n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n<thead>\n\n<tr class=\"gt_col_headings\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Animal\">Animal</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Legs\">Legs</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Plot\">Plot</th>\n</tr>\n</thead>\n<tbody class=\"gt_table_body\">\n  <tr>\n    <td class=\"gt_row gt_left\">Ostrich</td>\n    <td class=\"gt_row gt_right\">2</td>\n    <td class=\"gt_row gt_right\">2</td>\n  </tr>\n  <tr>\n    <td class=\"gt_row gt_left\">Spider</td>\n    <td class=\"gt_row gt_right\">8</td>\n    <td class=\"gt_row gt_right\">8</td>\n  </tr>\n  <tr>\n    <td class=\"gt_row gt_left\">Lion</td>\n    <td class=\"gt_row gt_right\">4</td>\n    <td class=\"gt_row gt_right\">4</td>\n  </tr>\n</tbody>\n\n\n</table>\n\n</div>\n        \n```\n:::\n:::\n\n\nHere is the final result:\n\n::: {#3cd364b6 .cell execution_count=2}\n``` {.python .cell-code code-fold=\"true\"}\nimport polars as pl\nfrom great_tables import GT\nfrom svg import SVG, Rect, Line\n\ndf = pl.DataFrame({\"Animal\": [\"Ostrich\", \"Spider\", \"Lion\"], \"Legs\": [2, 8, 4], \"Plot\": [2, 8, 4]})\n\nwidth = 50\nheight = 30\nmax_legs_value = df[\"Legs\"].max()\n\n\ndef create_plot_svg_py(val: int) -> str:\n    canvas = SVG(\n        width=width,\n        height=height,\n        elements=[\n            Rect(\n                x=0,\n                y=height / 4,\n                width=width * (val / max_legs_value),\n                height=height / 2,\n                fill=\"blue\",\n            ),\n            Line(x1=0, x2=0, y1=0, y2=height, stroke=\"black\"),\n        ],\n    )\n\n    html = f\"<div>{canvas}</div>\"\n    return html\n\n\nGT(df).fmt(fns=create_plot_svg_py, columns=[\"Plot\"])\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div id=\"iavfvbhnau\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>\n#iavfvbhnau table {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n        }\n\n#iavfvbhnau thead, tbody, tfoot, tr, td, th { border-style: none; }\n tr { background-color: transparent; }\n#iavfvbhnau p { margin: 0; padding: 0; }\n #iavfvbhnau .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }\n #iavfvbhnau .gt_caption { padding-top: 4px; padding-bottom: 4px; }\n #iavfvbhnau .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }\n #iavfvbhnau .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }\n #iavfvbhnau .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #iavfvbhnau .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #iavfvbhnau .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #iavfvbhnau .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }\n #iavfvbhnau .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }\n #iavfvbhnau .gt_column_spanner_outer:first-child { padding-left: 0; }\n #iavfvbhnau .gt_column_spanner_outer:last-child { padding-right: 0; }\n #iavfvbhnau .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; }\n #iavfvbhnau .gt_spanner_row { border-bottom-style: hidden; }\n #iavfvbhnau .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; }\n #iavfvbhnau .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; }\n #iavfvbhnau .gt_from_md> :first-child { margin-top: 0; }\n #iavfvbhnau .gt_from_md> :last-child { margin-bottom: 0; }\n #iavfvbhnau .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; }\n #iavfvbhnau .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; }\n #iavfvbhnau .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }\n #iavfvbhnau .gt_row_group_first td { border-top-width: 2px; }\n #iavfvbhnau .gt_row_group_first th { border-top-width: 2px; }\n #iavfvbhnau .gt_striped { background-color: rgba(128,128,128,0.05); }\n #iavfvbhnau .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #iavfvbhnau .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }\n #iavfvbhnau .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }\n #iavfvbhnau .gt_left { text-align: left; }\n #iavfvbhnau .gt_center { text-align: center; }\n #iavfvbhnau .gt_right { text-align: right; font-variant-numeric: tabular-nums; }\n #iavfvbhnau .gt_font_normal { font-weight: normal; }\n #iavfvbhnau .gt_font_bold { font-weight: bold; }\n #iavfvbhnau .gt_font_italic { font-style: italic; }\n #iavfvbhnau .gt_super { font-size: 65%; }\n #iavfvbhnau .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }\n #iavfvbhnau .gt_asterisk { font-size: 100%; vertical-align: 0; }\n \n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n<thead>\n\n<tr class=\"gt_col_headings\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Animal\">Animal</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Legs\">Legs</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Plot\">Plot</th>\n</tr>\n</thead>\n<tbody class=\"gt_table_body\">\n  <tr>\n    <td class=\"gt_row gt_left\">Ostrich</td>\n    <td class=\"gt_row gt_right\">2</td>\n    <td class=\"gt_row gt_right\"><div><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"30\"><rect x=\"0\" y=\"7.5\" width=\"12.5\" height=\"15.0\" fill=\"blue\"/><line stroke=\"black\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"30\"/></svg></div></td>\n  </tr>\n  <tr>\n    <td class=\"gt_row gt_left\">Spider</td>\n    <td class=\"gt_row gt_right\">8</td>\n    <td class=\"gt_row gt_right\"><div><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"30\"><rect x=\"0\" y=\"7.5\" width=\"50.0\" height=\"15.0\" fill=\"blue\"/><line stroke=\"black\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"30\"/></svg></div></td>\n  </tr>\n  <tr>\n    <td class=\"gt_row gt_left\">Lion</td>\n    <td class=\"gt_row gt_right\">4</td>\n    <td class=\"gt_row gt_right\"><div><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"30\"><rect x=\"0\" y=\"7.5\" width=\"25.0\" height=\"15.0\" fill=\"blue\"/><line stroke=\"black\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"30\"/></svg></div></td>\n  </tr>\n</tbody>\n\n\n</table>\n\n</div>\n        \n```\n:::\n:::\n\n\n## Setup\n\nHere is the code to start:\n\n::: {#51e70f52 .cell execution_count=3}\n``` {.python .cell-code}\nimport polars as pl\nfrom great_tables import GT\n\ndf = pl.DataFrame(\n    {\n        \"Animal\": [\"Ostrich\", \"Spider\", \"Lion\"],\n        \"Legs\": [2, 8, 4],\n        \"Plot\": [2, 8, 4],\n    }\n)\n\ngt = GT(df)\n```\n:::\n\n\n## The Binding Component: GT.fmt()\n\nLet's take advantage of the [`fmt()`](https://posit-dev.github.io/great-tables/reference/GT.fmt.html#great_tables.GT.fmt) method to apply a plotting function that formats our row values into plots. To see how we might use `fmt()`, we first need to define a formatting function to apply to each cell in a column. It will take as input the value in the cell, and should return whatever you want in that cell. Before plotting, let's imagine we wanted to replace the number with a tally of the number of legs:\n\n::: {#0a33f43c .cell execution_count=4}\n``` {.python .cell-code}\ndef create_leg_tally(value: int) -> str:\n    return \"|\" * value\n\n\ngt.fmt(fns=create_leg_tally, columns=\"Plot\")\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div id=\"kkkrpfztpm\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>\n#kkkrpfztpm table {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n        }\n\n#kkkrpfztpm thead, tbody, tfoot, tr, td, th { border-style: none; }\n tr { background-color: transparent; }\n#kkkrpfztpm p { margin: 0; padding: 0; }\n #kkkrpfztpm .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }\n #kkkrpfztpm .gt_caption { padding-top: 4px; padding-bottom: 4px; }\n #kkkrpfztpm .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }\n #kkkrpfztpm .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }\n #kkkrpfztpm .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #kkkrpfztpm .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #kkkrpfztpm .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #kkkrpfztpm .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }\n #kkkrpfztpm .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }\n #kkkrpfztpm .gt_column_spanner_outer:first-child { padding-left: 0; }\n #kkkrpfztpm .gt_column_spanner_outer:last-child { padding-right: 0; }\n #kkkrpfztpm .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; }\n #kkkrpfztpm .gt_spanner_row { border-bottom-style: hidden; }\n #kkkrpfztpm .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; }\n #kkkrpfztpm .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; }\n #kkkrpfztpm .gt_from_md> :first-child { margin-top: 0; }\n #kkkrpfztpm .gt_from_md> :last-child { margin-bottom: 0; }\n #kkkrpfztpm .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; }\n #kkkrpfztpm .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; }\n #kkkrpfztpm .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }\n #kkkrpfztpm .gt_row_group_first td { border-top-width: 2px; }\n #kkkrpfztpm .gt_row_group_first th { border-top-width: 2px; }\n #kkkrpfztpm .gt_striped { background-color: rgba(128,128,128,0.05); }\n #kkkrpfztpm .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #kkkrpfztpm .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }\n #kkkrpfztpm .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }\n #kkkrpfztpm .gt_left { text-align: left; }\n #kkkrpfztpm .gt_center { text-align: center; }\n #kkkrpfztpm .gt_right { text-align: right; font-variant-numeric: tabular-nums; }\n #kkkrpfztpm .gt_font_normal { font-weight: normal; }\n #kkkrpfztpm .gt_font_bold { font-weight: bold; }\n #kkkrpfztpm .gt_font_italic { font-style: italic; }\n #kkkrpfztpm .gt_super { font-size: 65%; }\n #kkkrpfztpm .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }\n #kkkrpfztpm .gt_asterisk { font-size: 100%; vertical-align: 0; }\n \n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n<thead>\n\n<tr class=\"gt_col_headings\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Animal\">Animal</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Legs\">Legs</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Plot\">Plot</th>\n</tr>\n</thead>\n<tbody class=\"gt_table_body\">\n  <tr>\n    <td class=\"gt_row gt_left\">Ostrich</td>\n    <td class=\"gt_row gt_right\">2</td>\n    <td class=\"gt_row gt_right\">||</td>\n  </tr>\n  <tr>\n    <td class=\"gt_row gt_left\">Spider</td>\n    <td class=\"gt_row gt_right\">8</td>\n    <td class=\"gt_row gt_right\">||||||||</td>\n  </tr>\n  <tr>\n    <td class=\"gt_row gt_left\">Lion</td>\n    <td class=\"gt_row gt_right\">4</td>\n    <td class=\"gt_row gt_right\">||||</td>\n  </tr>\n</tbody>\n\n\n</table>\n\n</div>\n        \n```\n:::\n:::\n\n\n## A Lightweight Approach: Svg.py\n\nNow we can apply that same logic to making our plots. Let's start with the function that will eventually be passed into `fmt()`:\n\n::: {#357edb19 .cell execution_count=5}\n``` {.python .cell-code}\nfrom svg import SVG, Rect, Line\n\nheight = 30\nwidth = 50\n\n\ndef create_plot_svg_py(val: int) -> str:\n    canvas = SVG(\n        width=width,\n        height=height,\n        elements=[\n            Rect(\n                x=0,\n                y=height / 4,\n                width=width * (val / max_legs_value),\n                height=height / 2,\n                fill=\"blue\",\n            ),\n            Line(x1=0, x2=0, y1=0, y2=height, stroke=\"black\"),\n        ],\n    )\n\n    html = f\"<div>{canvas}</div>\"\n    return html\n```\n:::\n\n\nHere you get to call `fmt()` to modify the column you want to apply the plotting function to.\n\n::: {#3448de12 .cell execution_count=6}\n``` {.python .cell-code}\ngt.fmt(fns=create_plot_svg_py, columns=\"Plot\")\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```{=html}\n<div id=\"onvhrjzrnq\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>\n#onvhrjzrnq table {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n        }\n\n#onvhrjzrnq thead, tbody, tfoot, tr, td, th { border-style: none; }\n tr { background-color: transparent; }\n#onvhrjzrnq p { margin: 0; padding: 0; }\n #onvhrjzrnq .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }\n #onvhrjzrnq .gt_caption { padding-top: 4px; padding-bottom: 4px; }\n #onvhrjzrnq .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }\n #onvhrjzrnq .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }\n #onvhrjzrnq .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #onvhrjzrnq .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #onvhrjzrnq .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #onvhrjzrnq .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }\n #onvhrjzrnq .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }\n #onvhrjzrnq .gt_column_spanner_outer:first-child { padding-left: 0; }\n #onvhrjzrnq .gt_column_spanner_outer:last-child { padding-right: 0; }\n #onvhrjzrnq .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; }\n #onvhrjzrnq .gt_spanner_row { border-bottom-style: hidden; }\n #onvhrjzrnq .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; }\n #onvhrjzrnq .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; }\n #onvhrjzrnq .gt_from_md> :first-child { margin-top: 0; }\n #onvhrjzrnq .gt_from_md> :last-child { margin-bottom: 0; }\n #onvhrjzrnq .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; }\n #onvhrjzrnq .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; }\n #onvhrjzrnq .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }\n #onvhrjzrnq .gt_row_group_first td { border-top-width: 2px; }\n #onvhrjzrnq .gt_row_group_first th { border-top-width: 2px; }\n #onvhrjzrnq .gt_striped { background-color: rgba(128,128,128,0.05); }\n #onvhrjzrnq .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #onvhrjzrnq .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }\n #onvhrjzrnq .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }\n #onvhrjzrnq .gt_left { text-align: left; }\n #onvhrjzrnq .gt_center { text-align: center; }\n #onvhrjzrnq .gt_right { text-align: right; font-variant-numeric: tabular-nums; }\n #onvhrjzrnq .gt_font_normal { font-weight: normal; }\n #onvhrjzrnq .gt_font_bold { font-weight: bold; }\n #onvhrjzrnq .gt_font_italic { font-style: italic; }\n #onvhrjzrnq .gt_super { font-size: 65%; }\n #onvhrjzrnq .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }\n #onvhrjzrnq .gt_asterisk { font-size: 100%; vertical-align: 0; }\n \n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n<thead>\n\n<tr class=\"gt_col_headings\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Animal\">Animal</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Legs\">Legs</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Plot\">Plot</th>\n</tr>\n</thead>\n<tbody class=\"gt_table_body\">\n  <tr>\n    <td class=\"gt_row gt_left\">Ostrich</td>\n    <td class=\"gt_row gt_right\">2</td>\n    <td class=\"gt_row gt_right\"><div><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"30\"><rect x=\"0\" y=\"7.5\" width=\"12.5\" height=\"15.0\" fill=\"blue\"/><line stroke=\"black\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"30\"/></svg></div></td>\n  </tr>\n  <tr>\n    <td class=\"gt_row gt_left\">Spider</td>\n    <td class=\"gt_row gt_right\">8</td>\n    <td class=\"gt_row gt_right\"><div><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"30\"><rect x=\"0\" y=\"7.5\" width=\"50.0\" height=\"15.0\" fill=\"blue\"/><line stroke=\"black\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"30\"/></svg></div></td>\n  </tr>\n  <tr>\n    <td class=\"gt_row gt_left\">Lion</td>\n    <td class=\"gt_row gt_right\">4</td>\n    <td class=\"gt_row gt_right\"><div><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"30\"><rect x=\"0\" y=\"7.5\" width=\"25.0\" height=\"15.0\" fill=\"blue\"/><line stroke=\"black\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"30\"/></svg></div></td>\n  </tr>\n</tbody>\n\n\n</table>\n\n</div>\n        \n```\n:::\n:::\n\n\nThis was very direct, we didn't have save to a buffer or import heavy duty plotting functions. We built the string with the help of `svg.py` and were able to insert into the table. See the string below:\n\n<!-- I would really like to wrap the output here, but nothing I've tried has worked -->\n<!-- https://github.com/quarto-dev/quarto-cli/discussions/6017 -->\n\n::: {#5fc2d059 .cell execution_count=7}\n\n::: {.cell-output .cell-output-display execution_count=7}\n```\n'<div><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"30\"><rect x=\"0\" y=\"7.5\" width=\"25.0\" height=\"15.0\" fill=\"blue\"/><line stroke=\"black\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"30\"/></svg></div>'\n```\n:::\n:::\n\n\nEven in its outputted form the string is still easily readable, which is another upside of using an SVG generation package.\n\n## Extreme Minimalism: Adding HTML directly\n\nIn the previous section, note that `svg.py` simply generated a string of HTML. You can do the same thing directly.\n\n::: {#3017b47b .cell execution_count=8}\n``` {.python .cell-code}\ndef create_plot_html(val: int) -> str:\n    bar_element = f\"\"\"\n    <div style=\"position: absolute;\n                width: {width * val / max_legs_value}px;\n                height: {height / 2}px;\n                background-color: purple;\n                margin-top: {height / 4}px;\n    \"></div>\"\"\"\n\n    line_element = \"\"\"\n    <div style=\"position: absolute;\n                top: 0;\n                bottom: 0;\n                width: 1px;\n                background-color: black;\n    \"></div>\"\"\"\n\n    html = f\"\"\"\n    <div style=\"position: relative; width: {width}px; height: {height}px;\">\n        {bar_element}\n        {line_element}\n    </div>\n    \"\"\"\n\n    return html\n```\n:::\n\n\nNow that we've defined our `create_plot_*` formatting function, the call to `fmt()` is identical to the one above.\n\n::: {#4907e996 .cell execution_count=9}\n``` {.python .cell-code}\ngt.fmt(fns=create_plot_html, columns=\"Plot\")\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```{=html}\n<div id=\"gzsdmvisbw\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>\n#gzsdmvisbw table {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n        }\n\n#gzsdmvisbw thead, tbody, tfoot, tr, td, th { border-style: none; }\n tr { background-color: transparent; }\n#gzsdmvisbw p { margin: 0; padding: 0; }\n #gzsdmvisbw .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }\n #gzsdmvisbw .gt_caption { padding-top: 4px; padding-bottom: 4px; }\n #gzsdmvisbw .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }\n #gzsdmvisbw .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }\n #gzsdmvisbw .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #gzsdmvisbw .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #gzsdmvisbw .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #gzsdmvisbw .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }\n #gzsdmvisbw .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }\n #gzsdmvisbw .gt_column_spanner_outer:first-child { padding-left: 0; }\n #gzsdmvisbw .gt_column_spanner_outer:last-child { padding-right: 0; }\n #gzsdmvisbw .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; }\n #gzsdmvisbw .gt_spanner_row { border-bottom-style: hidden; }\n #gzsdmvisbw .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; }\n #gzsdmvisbw .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; }\n #gzsdmvisbw .gt_from_md> :first-child { margin-top: 0; }\n #gzsdmvisbw .gt_from_md> :last-child { margin-bottom: 0; }\n #gzsdmvisbw .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; }\n #gzsdmvisbw .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; }\n #gzsdmvisbw .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }\n #gzsdmvisbw .gt_row_group_first td { border-top-width: 2px; }\n #gzsdmvisbw .gt_row_group_first th { border-top-width: 2px; }\n #gzsdmvisbw .gt_striped { background-color: rgba(128,128,128,0.05); }\n #gzsdmvisbw .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #gzsdmvisbw .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }\n #gzsdmvisbw .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }\n #gzsdmvisbw .gt_left { text-align: left; }\n #gzsdmvisbw .gt_center { text-align: center; }\n #gzsdmvisbw .gt_right { text-align: right; font-variant-numeric: tabular-nums; }\n #gzsdmvisbw .gt_font_normal { font-weight: normal; }\n #gzsdmvisbw .gt_font_bold { font-weight: bold; }\n #gzsdmvisbw .gt_font_italic { font-style: italic; }\n #gzsdmvisbw .gt_super { font-size: 65%; }\n #gzsdmvisbw .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }\n #gzsdmvisbw .gt_asterisk { font-size: 100%; vertical-align: 0; }\n \n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n<thead>\n\n<tr class=\"gt_col_headings\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Animal\">Animal</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Legs\">Legs</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Plot\">Plot</th>\n</tr>\n</thead>\n<tbody class=\"gt_table_body\">\n  <tr>\n    <td class=\"gt_row gt_left\">Ostrich</td>\n    <td class=\"gt_row gt_right\">2</td>\n    <td class=\"gt_row gt_right\">\n    <div style=\"position: relative; width: 50px; height: 30px;\">\n        \n    <div style=\"position: absolute;\n                width: 12.5px;\n                height: 15.0px;\n                background-color: purple;\n                margin-top: 7.5px;\n    \"></div>\n        \n    <div style=\"position: absolute;\n                top: 0;\n                bottom: 0;\n                width: 1px;\n                background-color: black;\n    \"></div>\n    </div>\n    </td>\n  </tr>\n  <tr>\n    <td class=\"gt_row gt_left\">Spider</td>\n    <td class=\"gt_row gt_right\">8</td>\n    <td class=\"gt_row gt_right\">\n    <div style=\"position: relative; width: 50px; height: 30px;\">\n        \n    <div style=\"position: absolute;\n                width: 50.0px;\n                height: 15.0px;\n                background-color: purple;\n                margin-top: 7.5px;\n    \"></div>\n        \n    <div style=\"position: absolute;\n                top: 0;\n                bottom: 0;\n                width: 1px;\n                background-color: black;\n    \"></div>\n    </div>\n    </td>\n  </tr>\n  <tr>\n    <td class=\"gt_row gt_left\">Lion</td>\n    <td class=\"gt_row gt_right\">4</td>\n    <td class=\"gt_row gt_right\">\n    <div style=\"position: relative; width: 50px; height: 30px;\">\n        \n    <div style=\"position: absolute;\n                width: 25.0px;\n                height: 15.0px;\n                background-color: purple;\n                margin-top: 7.5px;\n    \"></div>\n        \n    <div style=\"position: absolute;\n                top: 0;\n                bottom: 0;\n                width: 1px;\n                background-color: black;\n    \"></div>\n    </div>\n    </td>\n  </tr>\n</tbody>\n\n\n</table>\n\n</div>\n        \n```\n:::\n:::\n\n\nAt first glance, encoding HTML in multi-line strings may not be aesthetically pleasing, nor is it particularly more lightweight than `svg.py`. Still, it provides a good alternative if you are like me and insist on being as close to the output as possible. Separately, I have found the inclusion of text to be simpler with HTML on account of the default text handling behavior that comes along with it.\n\n## A Comprehensive Package: Plotnine\n\n::: {#1926c808 .cell execution_count=10}\n``` {.python .cell-code}\nfrom io import StringIO\nfrom plotnine import (\n    ggplot,\n    aes,\n    coord_flip,\n    geom_col,\n    scale_y_continuous,\n    scale_x_continuous,\n    theme_void,\n    geom_hline,\n)\n\nmax_legs_value = df[\"Legs\"].max()\n\n\ndef create_plot_plotnine(val: int) -> str:\n    plot = (\n        ggplot()\n        + aes(x=1, y=val)\n        + geom_col(width=0.5, fill=\"green\", show_legend=False)\n        + scale_y_continuous(limits=(0, max_legs_value))\n        + scale_x_continuous(limits=(0.5, 1.5))\n        + coord_flip()\n        + theme_void()\n        + geom_hline(yintercept=0)\n    )\n\n    buf = StringIO()\n    plot.save(buf, format=\"svg\", width=0.5, height=0.3, verbose=False)\n    svg_content = buf.getvalue()\n    buf.close()\n\n    html = f\"<div>{svg_content}</div>\"\n    return html\n\n\n# This might be familiar by now\ngt.fmt(fns=create_plot_plotnine, columns=\"Plot\")\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```{=html}\n<div id=\"xmzneigrnb\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>\n#xmzneigrnb table {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n        }\n\n#xmzneigrnb thead, tbody, tfoot, tr, td, th { border-style: none; }\n tr { background-color: transparent; }\n#xmzneigrnb p { margin: 0; padding: 0; }\n #xmzneigrnb .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }\n #xmzneigrnb .gt_caption { padding-top: 4px; padding-bottom: 4px; }\n #xmzneigrnb .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }\n #xmzneigrnb .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }\n #xmzneigrnb .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #xmzneigrnb .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #xmzneigrnb .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #xmzneigrnb .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }\n #xmzneigrnb .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }\n #xmzneigrnb .gt_column_spanner_outer:first-child { padding-left: 0; }\n #xmzneigrnb .gt_column_spanner_outer:last-child { padding-right: 0; }\n #xmzneigrnb .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; }\n #xmzneigrnb .gt_spanner_row { border-bottom-style: hidden; }\n #xmzneigrnb .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; }\n #xmzneigrnb .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; }\n #xmzneigrnb .gt_from_md> :first-child { margin-top: 0; }\n #xmzneigrnb .gt_from_md> :last-child { margin-bottom: 0; }\n #xmzneigrnb .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; }\n #xmzneigrnb .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; }\n #xmzneigrnb .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }\n #xmzneigrnb .gt_row_group_first td { border-top-width: 2px; }\n #xmzneigrnb .gt_row_group_first th { border-top-width: 2px; }\n #xmzneigrnb .gt_striped { background-color: rgba(128,128,128,0.05); }\n #xmzneigrnb .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #xmzneigrnb .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }\n #xmzneigrnb .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }\n #xmzneigrnb .gt_left { text-align: left; }\n #xmzneigrnb .gt_center { text-align: center; }\n #xmzneigrnb .gt_right { text-align: right; font-variant-numeric: tabular-nums; }\n #xmzneigrnb .gt_font_normal { font-weight: normal; }\n #xmzneigrnb .gt_font_bold { font-weight: bold; }\n #xmzneigrnb .gt_font_italic { font-style: italic; }\n #xmzneigrnb .gt_super { font-size: 65%; }\n #xmzneigrnb .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }\n #xmzneigrnb .gt_asterisk { font-size: 100%; vertical-align: 0; }\n \n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n<thead>\n\n<tr class=\"gt_col_headings\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Animal\">Animal</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Legs\">Legs</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Plot\">Plot</th>\n</tr>\n</thead>\n<tbody class=\"gt_table_body\">\n  <tr>\n    <td class=\"gt_row gt_left\">Ostrich</td>\n    <td class=\"gt_row gt_right\">2</td>\n    <td class=\"gt_row gt_right\"><div><?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n  \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"36pt\" height=\"21.6pt\" viewBox=\"0 0 36 21.6\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\n <metadata>\n  <rdf:RDF xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n   <cc:Work>\n    <dc:type rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\"/>\n    <dc:date>2025-07-03T14:49:24.228128</dc:date>\n    <dc:format>image/svg+xml</dc:format>\n    <dc:creator>\n     <cc:Agent>\n      <dc:title>Matplotlib v3.9.2, https://matplotlib.org/</dc:title>\n     </cc:Agent>\n    </dc:creator>\n   </cc:Work>\n  </rdf:RDF>\n </metadata>\n <defs>\n  <style type=\"text/css\">*{stroke-linejoin: round; stroke-linecap: butt}</style>\n </defs>\n <g id=\"figure_1\">\n  <g id=\"axes_1\">\n   <g id=\"matplotlib.axis_1\">\n    <g id=\"xtick_1\"/>\n    <g id=\"xtick_2\"/>\n    <g id=\"xtick_3\"/>\n    <g id=\"xtick_4\"/>\n    <g id=\"xtick_5\"/>\n    <g id=\"xtick_6\"/>\n    <g id=\"xtick_7\"/>\n    <g id=\"xtick_8\"/>\n    <g id=\"xtick_9\"/>\n   </g>\n   <g id=\"matplotlib.axis_2\">\n    <g id=\"ytick_1\"/>\n    <g id=\"ytick_2\"/>\n    <g id=\"ytick_3\"/>\n    <g id=\"ytick_4\"/>\n    <g id=\"ytick_5\"/>\n    <g id=\"ytick_6\"/>\n    <g id=\"ytick_7\"/>\n    <g id=\"ytick_8\"/>\n    <g id=\"ytick_9\"/>\n   </g>\n   <g id=\"PolyCollection_1\">\n    <path d=\"M 1.636364 15.709091 \nL 1.636364 5.890909 \nL 9.818182 5.890909 \nL 9.818182 15.709091 \nz\n\" clip-path=\"url(#p2fed83ef4c)\" style=\"fill: #008000\"/>\n   </g>\n   <g id=\"LineCollection_1\">\n    <path d=\"M 1.636364 21.6 \nL 1.636364 -0 \n\" clip-path=\"url(#p2fed83ef4c)\" style=\"fill: none; stroke: #000000; stroke-width: 0.886227\"/>\n   </g>\n  </g>\n </g>\n <defs>\n  <clipPath id=\"p2fed83ef4c\">\n   <rect x=\"0\" y=\"0\" width=\"36\" height=\"21.6\"/>\n  </clipPath>\n </defs>\n</svg>\n</div></td>\n  </tr>\n  <tr>\n    <td class=\"gt_row gt_left\">Spider</td>\n    <td class=\"gt_row gt_right\">8</td>\n    <td class=\"gt_row gt_right\"><div><?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n  \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"36pt\" height=\"21.6pt\" viewBox=\"0 0 36 21.6\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\n <metadata>\n  <rdf:RDF xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n   <cc:Work>\n    <dc:type rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\"/>\n    <dc:date>2025-07-03T14:49:24.276152</dc:date>\n    <dc:format>image/svg+xml</dc:format>\n    <dc:creator>\n     <cc:Agent>\n      <dc:title>Matplotlib v3.9.2, https://matplotlib.org/</dc:title>\n     </cc:Agent>\n    </dc:creator>\n   </cc:Work>\n  </rdf:RDF>\n </metadata>\n <defs>\n  <style type=\"text/css\">*{stroke-linejoin: round; stroke-linecap: butt}</style>\n </defs>\n <g id=\"figure_1\">\n  <g id=\"axes_1\">\n   <g id=\"matplotlib.axis_1\">\n    <g id=\"xtick_1\"/>\n    <g id=\"xtick_2\"/>\n    <g id=\"xtick_3\"/>\n    <g id=\"xtick_4\"/>\n    <g id=\"xtick_5\"/>\n    <g id=\"xtick_6\"/>\n    <g id=\"xtick_7\"/>\n    <g id=\"xtick_8\"/>\n    <g id=\"xtick_9\"/>\n   </g>\n   <g id=\"matplotlib.axis_2\">\n    <g id=\"ytick_1\"/>\n    <g id=\"ytick_2\"/>\n    <g id=\"ytick_3\"/>\n    <g id=\"ytick_4\"/>\n    <g id=\"ytick_5\"/>\n    <g id=\"ytick_6\"/>\n    <g id=\"ytick_7\"/>\n    <g id=\"ytick_8\"/>\n    <g id=\"ytick_9\"/>\n   </g>\n   <g id=\"PolyCollection_1\">\n    <path d=\"M 1.636364 15.709091 \nL 1.636364 5.890909 \nL 34.363636 5.890909 \nL 34.363636 15.709091 \nz\n\" clip-path=\"url(#p161195c259)\" style=\"fill: #008000\"/>\n   </g>\n   <g id=\"LineCollection_1\">\n    <path d=\"M 1.636364 21.6 \nL 1.636364 -0 \n\" clip-path=\"url(#p161195c259)\" style=\"fill: none; stroke: #000000; stroke-width: 0.886227\"/>\n   </g>\n  </g>\n </g>\n <defs>\n  <clipPath id=\"p161195c259\">\n   <rect x=\"0\" y=\"0\" width=\"36\" height=\"21.6\"/>\n  </clipPath>\n </defs>\n</svg>\n</div></td>\n  </tr>\n  <tr>\n    <td class=\"gt_row gt_left\">Lion</td>\n    <td class=\"gt_row gt_right\">4</td>\n    <td class=\"gt_row gt_right\"><div><?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n  \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"36pt\" height=\"21.6pt\" viewBox=\"0 0 36 21.6\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\n <metadata>\n  <rdf:RDF xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n   <cc:Work>\n    <dc:type rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\"/>\n    <dc:date>2025-07-03T14:49:24.323284</dc:date>\n    <dc:format>image/svg+xml</dc:format>\n    <dc:creator>\n     <cc:Agent>\n      <dc:title>Matplotlib v3.9.2, https://matplotlib.org/</dc:title>\n     </cc:Agent>\n    </dc:creator>\n   </cc:Work>\n  </rdf:RDF>\n </metadata>\n <defs>\n  <style type=\"text/css\">*{stroke-linejoin: round; stroke-linecap: butt}</style>\n </defs>\n <g id=\"figure_1\">\n  <g id=\"axes_1\">\n   <g id=\"matplotlib.axis_1\">\n    <g id=\"xtick_1\"/>\n    <g id=\"xtick_2\"/>\n    <g id=\"xtick_3\"/>\n    <g id=\"xtick_4\"/>\n    <g id=\"xtick_5\"/>\n    <g id=\"xtick_6\"/>\n    <g id=\"xtick_7\"/>\n    <g id=\"xtick_8\"/>\n    <g id=\"xtick_9\"/>\n   </g>\n   <g id=\"matplotlib.axis_2\">\n    <g id=\"ytick_1\"/>\n    <g id=\"ytick_2\"/>\n    <g id=\"ytick_3\"/>\n    <g id=\"ytick_4\"/>\n    <g id=\"ytick_5\"/>\n    <g id=\"ytick_6\"/>\n    <g id=\"ytick_7\"/>\n    <g id=\"ytick_8\"/>\n    <g id=\"ytick_9\"/>\n   </g>\n   <g id=\"PolyCollection_1\">\n    <path d=\"M 1.636364 15.709091 \nL 1.636364 5.890909 \nL 18 5.890909 \nL 18 15.709091 \nz\n\" clip-path=\"url(#p37ea60893d)\" style=\"fill: #008000\"/>\n   </g>\n   <g id=\"LineCollection_1\">\n    <path d=\"M 1.636364 21.6 \nL 1.636364 -0 \n\" clip-path=\"url(#p37ea60893d)\" style=\"fill: none; stroke: #000000; stroke-width: 0.886227\"/>\n   </g>\n  </g>\n </g>\n <defs>\n  <clipPath id=\"p37ea60893d\">\n   <rect x=\"0\" y=\"0\" width=\"36\" height=\"21.6\"/>\n  </clipPath>\n </defs>\n</svg>\n</div></td>\n  </tr>\n</tbody>\n\n\n</table>\n\n</div>\n        \n```\n:::\n:::\n\n\nNice! But that was a sizable chunk of code just to create plots comprised of one bar each. If you're like me, you'll find it's not at all trivial to do, especially without experience using the plotting package.\n\nHowever, this isn't the only graphic you might want to have on display – when you come across a use case that necessitates more detailed plots, a comprehensive plotting package like `plotnine` could very well be your best bet. Imagine we are passing in a list of tuples and want to generate a scatterplot, writing all of those as `svg.py` elements or direct HTML would be quite cumbersome.\n\n## Conclusion\n\nHow you choose to add plots to Great Tables is up to you. In writing graphical plotting functions for [**gt-extras**](https://posit-dev.github.io/gt-extras/articles/intro.html), I've personally turned towards an HTML-only approach that I've felt comfortable with in other settings. With that said, I do believe converting table values to graphic output is a task best done with a little bit of help (whether it be `svg-py` or another plotting package will depend on how detailed your plots are).\n\nThe choice ultimately depends on your specific needs: simplicity and directness, versus abstraction and power. By understanding the trade-offs, you will be able to tailor your approach to the needs of your project.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}