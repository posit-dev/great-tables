---
format: pdf
---

```{python}
#| label: setup
#| include: false

import polars as pl
from great_tables import GT
from great_tables.data import gtcars, islands, airquality, constants, exibble
```

```{python}
# | output: asis
# | echo: false

gtcars_pl = (
    pl.from_pandas(gtcars)
    .select(["mfr", "model", "hp", "trq", "mpg_c", "msrp"])
)

print(
    GT(
        gtcars[["mfr", "model", "hp", "trq", "msrp"]].head(5),
    )
    .tab_header(
        title="Some Cars from the gtcars Dataset",
        subtitle="Five Cars are shown here"
    )
    .tab_spanner(
        label="Make and Model",
        columns=["mfr", "model"],
        id="make_model"
    )
    .tab_spanner(
        label="Performance",
        columns=["hp", "trq", "msrp"]
    )
    .tab_spanner(
        label="Everything but the cost",
        columns=["mfr", "model", "hp", "trq"]
    )
    .fmt_integer(columns=["hp", "trq"])
    .fmt_currency(columns="msrp")
    .tab_source_note("Cars are all 2015 models.")
    .tab_source_note("Horsepower and Torque values are estimates.")
    .tab_options(table_width="600pt")
    .as_latex()
)
```


```{python}
# | output: asis
# | echo: false

islands_mini = islands.head(10)

print(
    (
    GT(islands_mini)
    .tab_header(
        title="Large Landmasses of the World",
        subtitle="The top ten largest are presented"
    )
    .fmt_integer(columns="size")
    .tab_source_note(
        source_note="Source: The World Almanac and Book of Facts, 1975, page 406."
    )
    .tab_source_note(
        source_note="Reference: McNeil, D. R. (1977) *Interactive Data Analysis*. Wiley."
    )
    ).as_latex()
)
```


```{python}
# | output: asis
# | echo: false

airquality_mini = airquality.head(10).assign(Year = 1973)

print(
    (
    GT(airquality_mini)
    .tab_header(
        title="New York Air Quality Measurements",
        subtitle="Daily measurements in New York City (May 1-10, 1973)"
    )
    ).as_latex()
)
```


```{python}
# | output: asis
# | echo: false

constants_mini = (
    pl.from_pandas(constants)
    .filter(pl.col("name").str.contains("molar")).sort("value")
    .with_columns(
        name=pl.col("name")
        .str.to_titlecase()
        .str.replace("Kpa", "kpa")
        .str.replace("Of", "of")
    )
)

print(
    GT(constants_mini)
    .cols_hide(columns=["uncert", "sf_value", "sf_uncert", "units"])
    .fmt_scientific(columns="value", decimals=3)
    .tab_header(title="Physical Constants Having a Molar Basis")
    .tab_options(column_labels_hidden=True)
    .as_latex()
)
```


```{python}
# | output: asis
# | echo: false

exibble_mini = (
    pl.from_pandas(exibble)
    .select(["num", "date", "time", "currency"])
    .head(5)
    .with_columns(time=pl.concat_str("[" + pl.col("time") + "]"))
    .with_columns(num=pl.col(num) * 1000)
)

print(
    GT(exibble_mini)
    .fmt_bytes(columns="num", standard="binary")
    .fmt_currency(columns="currency", rows=[2, 3, 4], pattern="_{x}_")
    .fmt_date(columns="date", date_style="wday_month_day_year")
    .as_latex()
)
```

