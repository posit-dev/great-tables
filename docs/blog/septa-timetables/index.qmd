---
title: Recreating Septa Transit Timetables in Python
format: html
html-table-processing: none
---


```{python}
import polars as pl

stops = pl.read_csv("chw-stops.csv")
times = pl.read_csv("times.csv")
```


```{python}
stop_times = times.join(other=stops, on="stop_name", maintain_order="left")


stop_times
```


```{python}
from great_tables import GT, html, style, loc, google_font
import polars as pl
import polars.selectors as cs


def h_m_p(s):
    h, m, _ = [int(part) for part in s.split(":")]
    ap = "a"

    if h > 12:
        h -= 12
        ap = "p"
    return f"{h}:{m:02d}{ap}"

def tick(b):
    return "&check;" if b else "" 

transit_table = (
    GT(stop_times)
    .cols_hide(columns=["stop_url", "zone_id", "stop_desc", "stop_lat", "stop_lon", "stop_id"])
    .fmt(h_m_p, columns=cs.matches(r"^[0-9]{4}$"))
    .fmt(tick, columns=cs.starts_with("service_"))
    .cols_label(
        stop_name="Stations",
        service_access="A",
        service_cash="C",
        service_park="P",
        fare_zone=html("Fare<br>Zone")
    )
    .tab_spanner(
        label="Services",
        columns=cs.starts_with("service_")
    )
    .tab_spanner(
        label="Train Number",
        columns=cs.matches(r"^[0-9]{4}$")
    )
    .cols_move_to_start("fare_zone")
    .cols_move_to_start(cs.starts_with("service_"))
    .cols_width(
        cases={c:"20px" for c in stop_times.columns if c.startswith("service_")}
    )
    .cols_width(
        cases={c:"80px" for c in stop_times.columns if c.startswith("8")}
    )
    .opt_row_striping(row_striping=True)
    .cols_align(align="center", columns="fare_zone")
    .cols_align(align="right", columns=cs.matches(r"^[0-9]{4}$"))

    .tab_style(
        style= style.css("background-color: black !important; color: white !important; border-top: none !important; border-bottom: none !important;"),
        locations=loc.body(columns=None, rows=list(range(-4, -1))
        )
    )
    .tab_style(
        style= style.css(
            """
                border-top: none !important;
                border-bottom: none !important;
                border-right: solid white 2px !important;
                color: white !important;
            """
            ),
        locations=loc.body(columns=~cs.matches(r"^[0-9]{4}$"), rows=list(range(-4, -1))
        )
    )
    .tab_style(
        style= style.css("border-right: solid black 2px !important;"),
        locations=loc.body(
            columns=~cs.matches(r"^[0-9]{4}$"),
            rows=list(range(0, 10)) + [13]
        )
    )
    .tab_options(row_striping_background_color="#A9A9A9")
    .opt_table_font(font=google_font("IBM Plex Sans"))
)

transit_table
```


