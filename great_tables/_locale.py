from __future__ import annotations

from csv import DictReader
from typing import Any, TypedDict, cast

from importlib_resources import files

DATA_MOD = files("great_tables") / "data"


def read_csv(fname: str) -> list[dict[str, Any]]:
    with open(fname, encoding="utf8") as f:
        return list(DictReader(f))


class Locale:
    locale: str | None

    def __init__(self, locale: str | None = ""):
        if locale is None or locale == "":
            locale = "en"
        self._locale = locale


class LocalesDict(TypedDict):
    locale: object
    lang_name: object
    lang_desc: object
    script_name: object
    script_desc: object
    territory_name: object
    territory_desc: object
    variant_name: object
    variant_desc: object
    chr_index: object
    decimal: object
    group: object
    percent_sign: object
    plus_sign: object
    minus_sign: object
    approx_sign: object
    exp_sign: object
    sup_exp: object
    per_mille: object
    infinity: object
    nan: object
    approx_pattern: object
    at_least_pattern: object
    at_most_pattern: object
    range_pattern: object
    decimal_format: object
    sci_format: object
    percent_format: object
    currency_format: object
    accounting_format: object
    default_numbering_system: object
    minimum_grouping_digits: int
    currency_code: object
    no_table_data_text: object
    sort_label_text: object
    filter_label_text: object
    search_placeholder_text: object
    page_next_text: object
    page_previous_text: object
    page_numbers_text: object
    page_info_text: object
    page_size_options_text: object
    page_next_label_text: object
    page_previous_label_text: object
    page_number_label_text: object
    page_jump_label_text: object
    page_size_options_label_text: object


class DefaultLocalesDict(TypedDict):
    default_locale: object
    base_locale: object


class CurrenciesDataDict(TypedDict):
    curr_code: object
    curr_number: object
    exponent: object
    curr_name: object
    symbol: object


class FlagsDataDict(TypedDict):
    country_code_2: str
    country_code_3: str
    country_name: str
    country_flag: str


class CountryNamesDict(TypedDict):
    country_code_2: str
    country_code_3: str
    af: str
    af_NA: str
    agq: str
    ak: str
    am: str
    ar: str
    ar_AE: str
    ar_BH: str
    ar_DJ: str
    ar_DZ: str
    ar_EG: str
    ar_EH: str
    ar_ER: str
    ar_IL: str
    ar_IQ: str
    ar_JO: str
    ar_KM: str
    ar_KW: str
    ar_LB: str
    ar_LY: str
    ar_MA: str
    ar_MR: str
    ar_OM: str
    ar_PS: str
    ar_QA: str
    ar_SA: str
    ar_SD: str
    ar_SO: str
    ar_SS: str
    ar_SY: str
    ar_TD: str
    ar_TN: str
    ar_YE: str
    as_: str
    asa: str
    ast: str
    az: str
    az_Cyrl: str
    az_Latn: str
    bas: str
    be: str
    be_tarask: str
    bem: str
    bez: str
    bg: str
    bm: str
    bn: str
    bn_IN: str
    bo: str
    bo_IN: str
    br: str
    brx: str
    bs: str
    bs_Cyrl: str
    bs_Latn: str
    ca: str
    ca_AD: str
    ca_ES_valencia: str
    ca_FR: str
    ca_IT: str
    ccp: str
    ccp_IN: str
    ce: str
    ceb: str
    cgg: str
    chr: str
    ckb: str
    ckb_IR: str
    cs: str
    cy: str
    da: str
    da_GL: str
    dav: str
    de: str
    de_AT: str
    de_BE: str
    de_CH: str
    de_IT: str
    de_LI: str
    de_LU: str
    dje: str
    doi: str
    dsb: str
    dua: str
    dyo: str
    dz: str
    ebu: str
    ee: str
    ee_TG: str
    el: str
    el_CY: str
    en: str
    en_001: str
    en_150: str
    en_AE: str
    en_AG: str
    en_AI: str
    en_AS: str
    en_AT: str
    en_AU: str
    en_BB: str
    en_BE: str
    en_BI: str
    en_BM: str
    en_BS: str
    en_BW: str
    en_BZ: str
    en_CA: str
    en_CC: str
    en_CH: str
    en_CK: str
    en_CM: str
    en_CX: str
    en_CY: str
    en_DE: str
    en_DG: str
    en_DK: str
    en_DM: str
    en_ER: str
    en_FI: str
    en_FJ: str
    en_FK: str
    en_FM: str
    en_GB: str
    en_GD: str
    en_GG: str
    en_GH: str
    en_GI: str
    en_GM: str
    en_GU: str
    en_GY: str
    en_HK: str
    en_IE: str
    en_IL: str
    en_IM: str
    en_IN: str
    en_IO: str
    en_JE: str
    en_JM: str
    en_KE: str
    en_KI: str
    en_KN: str
    en_KY: str
    en_LC: str
    en_LR: str
    en_LS: str
    en_MG: str
    en_MH: str
    en_MO: str
    en_MP: str
    en_MS: str
    en_MT: str
    en_MU: str
    en_MV: str
    en_MW: str
    en_MY: str
    en_NA: str
    en_NF: str
    en_NG: str
    en_NL: str
    en_NR: str
    en_NU: str
    en_NZ: str
    en_PG: str
    en_PH: str
    en_PK: str
    en_PN: str
    en_PR: str
    en_PW: str
    en_RW: str
    en_SB: str
    en_SC: str
    en_SD: str
    en_SE: str
    en_SG: str
    en_SH: str
    en_SI: str
    en_SL: str
    en_SS: str
    en_SX: str
    en_SZ: str
    en_TC: str
    en_TK: str
    en_TO: str
    en_TT: str
    en_TV: str
    en_TZ: str
    en_UG: str
    en_UM: str
    en_VC: str
    en_VG: str
    en_VI: str
    en_VU: str
    en_WS: str
    en_ZA: str
    en_ZM: str
    en_ZW: str
    eo: str
    es: str
    es_419: str
    es_AR: str
    es_BO: str
    es_BR: str
    es_BZ: str
    es_CL: str
    es_CO: str
    es_CR: str
    es_CU: str
    es_DO: str
    es_EA: str
    es_EC: str
    es_GQ: str
    es_GT: str
    es_HN: str
    es_IC: str
    es_MX: str
    es_NI: str
    es_PA: str
    es_PE: str
    es_PH: str
    es_PR: str
    es_PY: str
    es_SV: str
    es_US: str
    es_UY: str
    es_VE: str
    et: str
    eu: str
    ewo: str
    fa: str
    fa_AF: str
    ff: str
    ff_Adlm: str
    ff_Adlm_BF: str
    ff_Adlm_CM: str
    ff_Adlm_GH: str
    ff_Adlm_GM: str
    ff_Adlm_GW: str
    ff_Adlm_LR: str
    ff_Adlm_MR: str
    ff_Adlm_NE: str
    ff_Adlm_NG: str
    ff_Adlm_SL: str
    ff_Adlm_SN: str
    ff_Latn: str
    ff_Latn_BF: str
    ff_Latn_CM: str
    ff_Latn_GH: str
    ff_Latn_GM: str
    ff_Latn_GN: str
    ff_Latn_GW: str
    ff_Latn_LR: str
    ff_Latn_MR: str
    ff_Latn_NE: str
    ff_Latn_NG: str
    ff_Latn_SL: str
    fi: str
    fil: str
    fo: str
    fo_DK: str
    fr: str
    fr_BE: str
    fr_BF: str
    fr_BI: str
    fr_BJ: str
    fr_BL: str
    fr_CA: str
    fr_CD: str
    fr_CF: str
    fr_CG: str
    fr_CH: str
    fr_CI: str
    fr_CM: str
    fr_DJ: str
    fr_DZ: str
    fr_GA: str
    fr_GF: str
    fr_GN: str
    fr_GP: str
    fr_GQ: str
    fr_HT: str
    fr_KM: str
    fr_LU: str
    fr_MA: str
    fr_MC: str
    fr_MF: str
    fr_MG: str
    fr_ML: str
    fr_MQ: str
    fr_MR: str
    fr_MU: str
    fr_NC: str
    fr_NE: str
    fr_PF: str
    fr_PM: str
    fr_RE: str
    fr_RW: str
    fr_SC: str
    fr_SN: str
    fr_SY: str
    fr_TD: str
    fr_TG: str
    fr_TN: str
    fr_VU: str
    fr_WF: str
    fr_YT: str
    fur: str
    fy: str
    ga: str
    ga_GB: str
    gd: str
    gl: str
    gsw: str
    gsw_FR: str
    gsw_LI: str
    gu: str
    guz: str
    gv: str
    ha: str
    ha_GH: str
    ha_NE: str
    haw: str
    he: str
    hi: str
    hi_Latn: str
    hr: str
    hr_BA: str
    hsb: str
    hu: str
    hy: str
    ia: str
    id: str
    ig: str
    ii: str
    is_: str
    it: str
    it_CH: str
    it_SM: str
    it_VA: str
    ja: str
    jgo: str
    jmc: str
    jv: str
    ka: str
    kab: str
    kam: str
    kde: str
    kea: str
    kgp: str
    khq: str
    ki: str
    kk: str
    kkj: str
    kl: str
    kln: str
    km: str
    kn: str
    ko: str
    ko_KP: str
    kok: str
    ks: str
    ks_Arab: str
    ks_Deva: str
    ksb: str
    ksf: str
    ksh: str
    ku: str
    kw: str
    ky: str
    lag: str
    lb: str
    lg: str
    lkt: str
    ln: str
    ln_AO: str
    ln_CF: str
    ln_CG: str
    lo: str
    lrc: str
    lrc_IQ: str
    lt: str
    lu: str
    luo: str
    luy: str
    lv: str
    mai: str
    mas: str
    mas_TZ: str
    mer: str
    mfe: str
    mg: str
    mgh: str
    mgo: str
    mi: str
    mk: str
    ml: str
    mn: str
    mni: str
    mni_Beng: str
    mr: str
    ms: str
    ms_BN: str
    ms_ID: str
    ms_SG: str
    mt: str
    mua: str
    my: str
    mzn: str
    naq: str
    nb: str
    nb_SJ: str
    nd: str
    nds: str
    nds_NL: str
    ne: str
    ne_IN: str
    nl: str
    nl_AW: str
    nl_BE: str
    nl_BQ: str
    nl_CW: str
    nl_SR: str
    nl_SX: str
    nmg: str
    nn: str
    nnh: str
    no: str
    nus: str
    nyn: str
    om: str
    om_KE: str
    or_: str
    os: str
    os_RU: str
    pa: str
    pa_Arab: str
    pa_Guru: str
    pcm: str
    pl: str
    ps: str
    ps_PK: str
    pt: str
    pt_AO: str
    pt_CH: str
    pt_CV: str
    pt_GQ: str
    pt_GW: str
    pt_LU: str
    pt_MO: str
    pt_MZ: str
    pt_PT: str
    pt_ST: str
    pt_TL: str
    qu: str
    qu_BO: str
    qu_EC: str
    rm: str
    rn: str
    ro: str
    ro_MD: str
    rof: str
    ru: str
    ru_BY: str
    ru_KG: str
    ru_KZ: str
    ru_MD: str
    ru_UA: str
    rw: str
    rwk: str
    sa: str
    sah: str
    saq: str
    sat: str
    sat_Olck: str
    sbp: str
    sc: str
    sd: str
    sd_Arab: str
    sd_Deva: str
    se: str
    se_FI: str
    se_SE: str
    seh: str
    ses: str
    sg: str
    shi: str
    shi_Latn: str
    shi_Tfng: str
    si: str
    sk: str
    sl: str
    smn: str
    sn: str
    so: str
    so_DJ: str
    so_ET: str
    so_KE: str
    sq: str
    sq_MK: str
    sq_XK: str
    sr: str
    sr_Cyrl: str
    sr_Cyrl_BA: str
    sr_Cyrl_ME: str
    sr_Cyrl_XK: str
    sr_Latn: str
    sr_Latn_BA: str
    sr_Latn_ME: str
    sr_Latn_XK: str
    su: str
    su_Latn: str
    sv: str
    sv_AX: str
    sv_FI: str
    sw: str
    sw_CD: str
    sw_KE: str
    sw_UG: str
    ta: str
    ta_LK: str
    ta_MY: str
    ta_SG: str
    te: str
    teo: str
    teo_KE: str
    tg: str
    th: str
    ti: str
    ti_ER: str
    tk: str
    to: str
    tr: str
    tr_CY: str
    tt: str
    twq: str
    tzm: str
    ug: str
    uk: str
    und: str
    ur: str
    ur_IN: str
    uz: str
    uz_Arab: str
    uz_Cyrl: str
    uz_Latn: str
    vai: str
    vai_Latn: str
    vai_Vaii: str
    vi: str
    vun: str
    wae: str
    wo: str
    xh: str
    xog: str
    yav: str
    yi: str
    yo: str
    yo_BJ: str
    yrl: str
    yrl_CO: str
    yrl_VE: str
    yue: str
    yue_Hans: str
    yue_Hant: str
    zgh: str
    zh: str
    zh_Hans: str
    zh_Hans_HK: str
    zh_Hans_MO: str
    zh_Hans_SG: str
    zh_Hant: str
    zh_Hant_HK: str
    zh_Hant_MO: str
    zu: str


# Note that all the functions below cast the result hint of read_csv
# to a more specific dict type, which contains item info.


def _get_locales_data() -> list[LocalesDict]:
    fname = DATA_MOD / "x_locales.csv"

    return cast("list[LocalesDict]", read_csv(fname))


def _get_default_locales_data() -> list[DefaultLocalesDict]:
    fname = DATA_MOD / "x_default_locales.csv"
    return cast("list[DefaultLocalesDict]", read_csv(fname))


def _get_currencies_data() -> list[CurrenciesDataDict]:
    fname = DATA_MOD / "x_currencies.csv"

    return cast("list[CurrenciesDataDict]", read_csv(fname))


def _get_flags_data() -> list[FlagsDataDict]:
    fname = DATA_MOD / "x_flags.csv"

    return cast("list[FlagsDataDict]", read_csv(fname))


def _get_country_names_data() -> list[CountryNamesDict]:
    fname = DATA_MOD / "x_country_names.csv"

    return cast("list[CountryNamesDict]", read_csv(fname))
